name: build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare context
        id: context
        run: |
          echo ${{ github.ref }} | perl -ne '/^v([\d\.]+)-(.+)$/ && print "::set-output marlin_ver=$1\n"'
          echo ${{ github.ref }} | perl -ne '/^v([\d\.]+)-(.+)$/ && print "::set-output release_suf=$2\n"'

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'

      - name: Setup PlatformIO
        run: |
          pip install -U https://github.com/platformio/platformio-core/archive/develop.zip
          platformio update

      - name: Prepare repo
        uses: actions/checkout@v2

      - name: Clone Marlin firmware
        uses: actions/checkout@v2
        with:
          repository: MarlinFirmware/Marlin
          ref: ${{ steps.context.outputs.marlin_ver }}
          path: Marlin

      - name: Clone Marlin configurations
        uses: actions/checkout@v2
        with:
          repository: MarlinFirmware/Configurations
          ref: ${{ steps.context.outputs.marlin_ver }}
          path: Configurations

      - name: Copy Ender 3 V2 config files
        run: |
          cp Configuration.h Marlin/Marlin/
          cp Configuration_adv.h Marlin/Marlin/
          cp 'Configurations/config/examples/Creality/Ender-3 V2/_Bootscreen.h' Marlin/Marlin/
          cp 'Configurations/config/examples/Creality/Ender-3 V2/_Statusscreen.h' Marlin/Marlin/

      - name: Apply source patch
        run: patch -p1 < Marlin.patch

      - name: Build Marlin
        run: cd Marlin && platformio run -e STM32F103RET6_creality

      - name: Package release files
        run: |
          mkdir -p release
          cp -r 'Configurations/config/examples/Creality/Ender-3 V2/DWIN_SET' release/
          cp Marlin/.pio/build/STM32F103RET6_creality/firmware-*.bin release/
          cd release && zip -r ../release.zip *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
